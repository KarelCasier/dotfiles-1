# Source .profile
if [ -f ~/.profile ]; then
  source ~/.profile
fi

# Colors {{{

  # Enable colors
  export CLICOLOR=1

  # Enable 256 color mode
  # [[ $TMUX = "" ]] && export TERM="xterm-256color"

  # Base 16
  BASE16_SHELL=$DOTHOME/lib/shell/base16-shell/
  [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"
  [ -z $BASE16_THEME ] && base16_tomorrow-night

# }}}

# Source zim
if [[ -s ${ZDOTDIR:-${HOME}}/.zim/init.zsh ]]; then
  source ${ZDOTDIR:-${HOME}}/.zim/init.zsh
fi

# Update and cleanup brew
if command -v brew >/dev/null 2>&1; then
  export PYTHONPATH=$(brew --prefix)/lib/python2.7/site-packages:$PYTHONPATH
  alias brewup='brew update && brew upgrade --all && brew cleanup && brew cask cleanup'
fi

# Copy-paste (requires xclip on *NIX systems)
if command -v xclip >/dev/null 2>&1; then
  alias pbcopy='xclip -i -selection clipboard'
  alias pbpaste='xclip -o -selection clipboard'
fi

# Run with in server mode to allow eclim debugger, open eclim project and start session recording
function vjava () {
  $EDITOR --servername "$1" +Session +"ProjectOpen $1"
}

# Serve current directory as HTTP server, optionally specifying the port (default is 8000)
function serve() {
  local port="${1:-8000}"
  sleep 1 && open "http://localhost:${port}/" &
  # Set the default Content-Type to `text/plain` instead of `application/octet-stream`
  # And serve everything as UTF-8 (although not technically correct, this doesnâ€™t break anything for binary files)
  python -c $'import SimpleHTTPServer;\nmap = SimpleHTTPServer.SimpleHTTPRequestHandler.extensions_map;\nmap[""] = "text/plain";\nfor key, value in map.items():\n\tmap[key] = value + ";charset=UTF-8";\nSimpleHTTPServer.test();' "$port"
}

# Init fasd with cache to speed up startup
source "$DOTHOME/lib/shell/fasd/fasd" > /dev/null
fasd_cache=~/.fasd.cache.zsh
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init posix-alias zsh-hook zsh-ccomp zsh-ccomp-install zsh-wcomp zsh-wcomp-install >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache

# Add viminfo fasd command
alias v='f -e vim -b viminfo'

# Load fzf
source ~/.fzf.zsh

# Use faster grep command if possible
if command -v rg >/dev/null 2>&1; then
  export FZF_DEFAULT_COMMAND='rg --files --hidden --follow --glob "!.git/*"'
elif command -v ag >/dev/null 2>&1; then
  export FZF_DEFAULT_COMMAND='ag -g ""'
fi

# Load rest of libraries
# command -v thefuck >/dev/null 2>&1 && eval "$(thefuck --alias)"
command -v hub >/dev/null 2>&1 && eval "$(hub alias -s)"
